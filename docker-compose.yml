---
version: "3"
services:
  rpc-demo1:
    build: ./rpcdemo
    image: rpc-demo:latest
    container_name: requester1
    restart: on-failure
    depends_on:
    - replying-listener-demo1
    - replying-listener-demo2
    - kafka1
    - kafka2
    - kafka3
    ports:
    - "8081:8081"
    networks:
    - mynet

  rpc-demo2:
    build: ./rpcdemo
    image: rpc-demo:latest
    container_name: requester2
    restart: on-failure
    depends_on:
    - replying-listener-demo1
    - replying-listener-demo2
    - kafka1
    - kafka2
    - kafka3
    ports:
    - "8082:8081"
    networks:
    - mynet


  replying-listener-demo1:
    build: ./replyinglistenerdemo
    image: replying-listener-demo:latest
    container_name: replier1
    restart: on-failure
    depends_on:
    - kafka1
    - kafka2
    - kafka3
    networks:
    - mynet

  replying-listener-demo2:
    build: ./replyinglistenerdemo
    image: replying-listener-demo:latest
    container_name: replier2
    restart: on-failure
    depends_on:
    - kafka1
    - kafka2
    - kafka3
    networks:
    - mynet

  #  db:
  #    image: mysql:5.6
  #    environment:
  #    - MYSQL_ROOT_PASSWORD=root
  #    - MYSQL_DATABASE=test
  #    - MYSQL_USER=user
  #    - MYSQL_PASSWORD=user
  #    container_name: mysql
  #    ports:
  #    - "3306:3306"
  #    networks:
  #    - mynet

  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
    - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
    - mynet

  kafka1:
    image: confluentinc/cp-enterprise-kafka:5.0.0
    hostname: kafka1
    container_name: kafka1
    #    ports:
    #    - "9092:9092"
    depends_on:
    - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29091
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    networks:
    - mynet

  kafka2:
    image: confluentinc/cp-enterprise-kafka:5.0.0
    hostname: kafka2
    container_name: kafka2
    #    ports:
    #    - "9093:9093"
    depends_on:
    - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    networks:
    - mynet

  kafka3:
    image: confluentinc/cp-enterprise-kafka:5.0.0
    hostname: kafka3
    container_name: kafka3
    #    ports:
    #    - "9094:9094"
    depends_on:
    - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29093
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: 'false'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    networks:
    - mynet

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.0.0
    hostname: control-center
    container_name: control-center
    depends_on:
    - zookeeper
    - kafka1
    - kafka2
    - kafka3
    ports:
    - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka1:29091,kafka3:29093,kafka3:29093'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
    - mynet

networks:
  mynet:
